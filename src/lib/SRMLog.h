#ifndef SRMLOG_H
#define SRMLOG_H

#include "SRMTypes.h"

#ifdef __cplusplus
extern "C" {
#endif

/*!
 * @brief Debugging information
 *
 * The SRMLog class provides an output stream for debugging information.\n
 * The level of verbosity can be assigned setting the **SRM_DEBUG** environment variable to a non negative integer value.\n
 *
 * ## Verbosity levels
 *
 * #### SRM_DEBUG=0
 * Disables messages except those generated by log().
 *
 * #### SRM_DEBUG=1
 * Prints messages generated by log() and fatal().
 *
 * #### SRM_DEBUG=2
 * Prints messages generated by log(), fatal() and error().
 *
 * #### SRM_DEBUG=3
 * Prints messages generated by log(), fatal(), error() and warning().
 *
 * #### SRM_DEBUG=4
 * Prints messages generated by log(), fatal(), error(), warning() and debug().
 */

void SRMLogInit();

Int32 SRMLogGetLevel();

/// Prints general messages independent of the value of **SRM_DEBUG**.
void SRMLog(const char *format, ...);

/// Reports an unrecoverable error. **SRM_DEBUG** >= 1.
void SRMFatal(const char *format, ...);

/// Reports a nonfatal error. **SRM_DEBUG** >= 2.
void SRMError(const char *format, ...);

/// Messages that report a risk for the compositor. **SRM_DEBUG** >= 3.
void SRMWarning(const char *format, ...);

/// Debugging messages. **SRM_DEBUG** >= 4.
void SRMDebug(const char *format, ...);

#ifdef __cplusplus
}
#endif

#endif // SRMLOG_H
